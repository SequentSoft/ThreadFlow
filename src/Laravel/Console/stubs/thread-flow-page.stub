<?php

namespace {{ namespace }};

use SequentSoft\ThreadFlow\Contracts\Messages\Incoming\Regular\IncomingRegularMessageInterface;
use SequentSoft\ThreadFlow\Messages\Outgoing\Regular\TextOutgoingMessage;
use SequentSoft\ThreadFlow\Page\AbstractPage;

class {{ class }} extends AbstractPage
{
    protected function show(): void
    {
        $this->reply(new TextOutgoingMessage('This is {{class}}', [
            ['next' => 'Go to next page'],
        ]));
    }

    protected function handleMessage(IncomingRegularMessageInterface $message)
    {
        if ($message->isText('next')) {
            $this->reply(new TextOutgoingMessage('Next page not defined'));
        }

        $this->reply(new TextOutgoingMessage('Please enter message or press button', [
            ['next' => 'Go to next page'],
        ]));
    }
}
